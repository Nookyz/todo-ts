{"version":3,"sources":["store/types/types.ts","store/reducers/todo.ts","store/configureStore.ts","components/App/App.styled.tsx","components/Header/Header.styled.tsx","components/Header/Header.tsx","store/actions/todo.ts","components/Menu/Menu.styled.tsx","components/Menu/Menu.tsx","components/TodoToolbar/TodoToolbar.styled.tsx","components/Popup/Popup.styled.tsx","components/Popup/Popup.tsx","components/TodoToolbar/TodoToolbar.tsx","hooks/close.hook.tsx","components/TodoList/TodoList.styled.tsx","components/TodoEmpty/TodoEmpty.styled.tsx","components/TodoEmpty/TodoEmpty.tsx","components/TodoList/TodoList.tsx","components/TodoInput/TodoInput.styled.tsx","components/TodoInput/TodoInput.tsx","pages/page.styled.tsx","components/TodoSort/TodoSort.styled.tsx","components/TodoSort/TodoSort.tsx","pages/Home.tsx","components/TodoList/TodoListImp.tsx","pages/Important.tsx","components/Main/Main.styled.tsx","components/Main/Main.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Todos","initialState","todos","rootReducer","combineReducers","todo","state","action","type","SET_TODO","payload","ADD_TODO","DELETE_TODO","filter","id","TOGGLE_TODO_COMPLETED","map","completed","TOGGLE_IMP_TODO","imp","SORT_BY_TITLE","sortBy","o","title","reverse","SORT_BY_IMP","SORT_BY_DONE","SORT_BY_DATE","date","store","createStore","applyMiddleware","thunk","GlobalStyle","createGlobalStyle","MyHeader","styled","div","MyHeaderTitle","Header","addTodo","deleteTodo","toggleTodoCompleted","toggleImpTodo","MyMenu","props","open","MyMenuHeader","MyMenuNav","Menu","openMenu","setOpenMenu","className","onClick","to","exact","activeClassName","length","MyToolbar","MyToolbarTitle","MyToolbarSort","button","path","bg","MyPopup","Popup","sort","setSortBy","setSortText","setOpenPopup","sortHandler","text","ref","TodoToolbar","close","useState","openPopup","setPath","useRef","useEffect","listener","event","current","target","contains","document","addEventListener","removeEventListener","history","useHistory","location","pathname","disabled","CSSTransition","in","timeout","classNames","unmountOnExit","MyTodoList","MyTodo","MyTodoContent","MyTodoEmpty","h1","TodoEmpty","TodoList","useSelector","dispatch","useDispatch","toggleTodoCompletedHandler","TransitionGroup","key","addToImpHandler","MyInput","TodoInput","todoItem","setTitle","refInput","focus","placeholder","value","onChange","e","onKeyPress","trim","maxLength","MyPage","MyTodoSort","TodoSort","sortText","sortIcon","setSortIcon","orderBy","sortByTitle","sortByImp","sortByCompleted","sortByDate","Home","savedSort","JSON","parse","localStorage","getItem","savedTextSort","setItem","stringify","uuid","Date","now","TodoListImp","Important","MyMain","Main","savedMenu","setTodo","component","App","Boolean","window","hostname","match","ReactDOM","render","Fragment","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.15396a66.chunk.js","sourcesContent":["export interface ITodo {\r\n  id: string\r\n  title: string\r\n  date: Date\r\n  imp: boolean\r\n  completed: boolean\r\n}\r\n\r\nexport interface ITodoState {\r\n  todos: ITodo[]\r\n}\r\n\r\nexport enum Todos {\r\n  SET_TODO = 'SET_TODO',\r\n  ADD_TODO = 'ADD_TODO',\r\n  DELETE_TODO = 'DELETE_TODO',\r\n  TOGGLE_TODO_COMPLETED = 'TOGGLE_TODO_COMPLETED',\r\n  TOGGLE_IMP_TODO = 'TOGGLE_IMP_TODO',\r\n\r\n  SORT_BY_TITLE = 'SORT_BY_TITLE',\r\n  SORT_BY_IMP = 'SORT_BY_IMP',\r\n  SORT_BY_DONE = 'SORT_BY_DONE',\r\n  SORT_BY_DATE = 'SORT_BY_DATE'\r\n}","import {Todos} from '../types/types'\r\nimport {ITodoState} from '../types/types'\r\nimport {ITodo} from '../types/types'\r\nimport {sortBy} from 'lodash'\r\nimport {TodoAction} from '../types/actions'\r\n\r\nconst initialState: ITodoState = {\r\n  todos: [],\r\n  //impTodos: []\r\n}\r\n\r\nexport const todoReducer = (state = initialState, action: TodoAction) => {\r\n\r\n  switch(action.type){\r\n    case Todos.SET_TODO:\r\n      return {\r\n        ...state,\r\n        todos: action.payload\r\n      }\r\n    // case Todos.SET_TODO_IMPORTANT:\r\n    //   return {\r\n    //     ...state,\r\n    //     impTodos: action.payload\r\n    //   }\r\n    case Todos.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos]\r\n      }\r\n    // case Todos.ADD_TODO_IMPORTANT:\r\n    //   return {\r\n    //     ...state,\r\n    //     impTodos: [action.payload, ...state.impTodos]\r\n    //   }\r\n    case Todos.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== action.payload),\r\n        //impTodos: state.impTodos.filter(todo => todo.id !== action.payload),\r\n      }\r\n    // case Todos.DELETE_FROM_IMP:\r\n    //   return {\r\n    //     ...state,\r\n    //     impTodos: state.impTodos.filter(todo => todo.id !== action.payload),\r\n    //   }\r\n    case Todos.TOGGLE_TODO_COMPLETED:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>{\r\n          if(todo.id === action.payload){\r\n            todo.completed = !todo.completed\r\n          }\r\n          return todo\r\n        })\r\n      }\r\n    // case Todos.TOGGLE_TODO_COMPLETED_IMP:\r\n    //   return {\r\n    //     ...state,\r\n    //     impTodos: state.impTodos.map(todo =>{\r\n    //       if(todo.id === action.payload){\r\n    //         todo.completed = !todo.completed\r\n    //       }\r\n    //       return todo\r\n    //     })\r\n    //   }\r\n    case Todos.TOGGLE_IMP_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>{\r\n          if(todo.id === action.payload){\r\n            todo.imp = !todo.imp\r\n          }\r\n          return todo\r\n        }),\r\n        // impTodos: state.impTodos.map(todo =>{\r\n        //   if(todo.id === action.payload){\r\n        //     todo.imp = !todo.imp\r\n        //   }\r\n        //   return todo\r\n        // })\r\n      }\r\n    case Todos.SORT_BY_TITLE:\r\n      if(action.payload === 'asc'){\r\n        return {\r\n          ...state,\r\n          todos: sortBy(state.todos, [(o: ITodo) => o.title])\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: sortBy(state.todos, [(o: ITodo) => o.title]).reverse()\r\n      }\r\n    case Todos.SORT_BY_IMP:\r\n      if(action.payload === 'asc'){\r\n        return {\r\n          ...state,\r\n          todos: sortBy(state.todos, [(o: ITodo) => o.imp])\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: sortBy(state.todos, [(o: ITodo) => o.imp]).reverse()\r\n      }\r\n    case Todos.SORT_BY_DONE:\r\n      if(action.payload === 'asc'){\r\n        return {\r\n          ...state,\r\n          todos: sortBy(state.todos, [(o: ITodo) => o.completed])\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: sortBy(state.todos, [(o: ITodo) => o.completed]).reverse()\r\n      }\r\n    case Todos.SORT_BY_DATE:\r\n      if(action.payload === 'asc'){\r\n        return {\r\n          ...state,\r\n          todos: sortBy(state.todos, [(o: ITodo) => o.date])\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: sortBy(state.todos, [(o: ITodo) => o.date]).reverse()\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport {todoReducer} from './reducers/todo'\r\n\r\nconst rootReducer = combineReducers({\r\n  todo: todoReducer\r\n})\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    text-decoration: none;\r\n    user-select: none;\r\n  }\r\n  #root{\r\n    height: 100%;\r\n  }\r\n  body {\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n`","import styled from 'styled-components'\r\n\r\nexport const MyHeader = styled.div`\r\n  height: 5vh;\r\n  background: #ada7c9;\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 1px solid #9186C7;\r\n`\r\nexport const MyHeaderTitle = styled.div`\r\n  font-size: 24px;\r\n  padding: 8px;\r\n  color: #fff;\r\n`","import React, { ReactElement } from 'react'\r\nimport {\r\n  MyHeader,\r\n  MyHeaderTitle\r\n} from './Header.styled'\r\n\r\nexport const Header: React.FC = (): ReactElement => {\r\n  return (\r\n    <MyHeader>\r\n      <MyHeaderTitle>\r\n        To Do\r\n      </MyHeaderTitle>\r\n    </MyHeader>\r\n  )\r\n}\r\n","import {Todos, ITodo} from '../types/types'\r\nimport {TodoAction} from '../types/actions'\r\n\r\n// SET\r\nexport const setTodo = (todos: ITodo[]): TodoAction => ({\r\n  type: Todos.SET_TODO,\r\n  payload: todos\r\n})\r\n\r\n\r\n// ADD\r\nexport const addTodo = (todos: ITodo): TodoAction => ({\r\n  type: Todos.ADD_TODO,\r\n  payload: todos\r\n})\r\n\r\n\r\n// DELETE\r\nexport const deleteTodo = (id: string): TodoAction => ({\r\n  type: Todos.DELETE_TODO,\r\n  payload: id\r\n})\r\n\r\n// TOGGLE Todo Completed\r\nexport const toggleTodoCompleted = (id: string): TodoAction => ({\r\n  type: Todos.TOGGLE_TODO_COMPLETED,\r\n  payload: id\r\n})\r\n\r\n// TOGGLE IPM(STAR)\r\nexport const toggleImpTodo = (id: string): TodoAction => ({\r\n  type: Todos.TOGGLE_IMP_TODO,\r\n  payload: id\r\n})\r\n\r\n// SORT \r\nexport const sortByTitle = (orderBy: string): TodoAction => ({\r\n  type: Todos.SORT_BY_TITLE,\r\n  payload: orderBy\r\n})\r\n\r\nexport const sortByImp = (orderBy: string): TodoAction => ({\r\n  type: Todos.SORT_BY_IMP,\r\n  payload: orderBy\r\n})\r\n\r\nexport const sortByCompleted = (orderBy: string): TodoAction => ({\r\n  type: Todos.SORT_BY_DONE,\r\n  payload: orderBy\r\n})\r\n\r\nexport const sortByDate = (orderBy: string): TodoAction => ({\r\n  type: Todos.SORT_BY_DATE,\r\n  payload: orderBy\r\n})","import styled from 'styled-components'\r\n\r\nexport const MyMenu = styled.div`\r\n  background: #f4f4f4; \r\n  width: 280px;\r\n  border-right: 1px solid #D3D3D3;\r\n  transition: width 0.5s ease-in-out;\r\n  width: ${(props: {open: boolean}) => (props.open ? \"280px\" : \"50px\")};\r\n\r\n`\r\nexport const MyMenuHeader = styled.div`\r\n  margin: 12px 0;\r\n  padding: 0 10px;\r\n  \r\n  width: 100%;\r\n  height: 30px;\r\n  \r\n  span{\r\n    height: 100%;\r\n    padding: 3px;\r\n    color: #34373d;\r\n    transition: all 0.2s ease-in-out;\r\n    :hover{\r\n      background: #ada7c9;\r\n      cursor: pointer;\r\n      box-shadow: 0 0 2px rgba(0,0,0,0.4);\r\n      color: #FFF;\r\n    }\r\n  }\r\n`\r\nexport const MyMenuNav = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  a{\r\n    display: grid;\r\n    grid-template-columns: 35px 1fr 25px;\r\n    padding: 8px 0 8px 13px;\r\n    align-items: center;\r\n    color: #34373d;\r\n    transition: all 0.2s ease-in-out;\r\n    :hover{\r\n      background: #E0E0E0;\r\n    }\r\n    span:first-child{\r\n      font-size: 24px; \r\n      margin-right: 10px;\r\n    }\r\n    \r\n    .title-todo{\r\n      display: ${(props: {open: boolean}) => (props.open ? null : 'none')};\r\n      animation: ${(props: {open: boolean}) => (props.open ? 'showText 0.7s ease-in-out' : 'hideText 0.7s ease-in-out')};\r\n      opacity: ${(props: {open: boolean}) => (props.open ? '1' : '0')};\r\n      @keyframes showText {\r\n        from {\r\n          opacity: 0;\r\n        }\r\n        to {\r\n          opacity: 1;\r\n        }\r\n      }\r\n      @keyframes hideText {\r\n        from {\r\n          opacity: 1;\r\n        }\r\n        to {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    }\r\n    .count-todo{     \r\n      display: ${(props: {open: boolean}) => (props.open ? 'flex' : 'none')};     \r\n      animation: ${(props: {open: boolean}) => (props.open ? 'showText 0.7s ease-in-out' : 'hideText 0.7s ease-in-out')};\r\n      @keyframes showText {\r\n        from {\r\n          opacity: 0;\r\n        }\r\n        to {\r\n          opacity: 1;\r\n        }\r\n      }\r\n      @keyframes hideText {\r\n        from {\r\n          opacity: 1;\r\n        }\r\n        to {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .active-link{\r\n    color: #7464C0;\r\n  }\r\n`","import React, { ReactElement } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {ITodo} from '../../store/types/types'\r\nimport {\r\n  MyMenu,\r\n  MyMenuHeader,\r\n  MyMenuNav\r\n} from './Menu.styled'\r\n\r\ninterface IMenuProps {\r\n  openMenu: boolean\r\n  setOpenMenu: (value: boolean) => void\r\n  todos: ITodo[]\r\n}\r\n\r\nconst Menu: React.FC<IMenuProps> = (props): ReactElement => {\r\n\r\n  const {openMenu, setOpenMenu, todos} = props\r\n\r\n  return (\r\n    <MyMenu open={openMenu}>\r\n\r\n      <MyMenuHeader >\r\n        <span className=\"material-icons\" onClick={() => setOpenMenu(!openMenu)}>\r\n          menu\r\n        </span>\r\n      </MyMenuHeader>\r\n\r\n      <MyMenuNav open={openMenu}>\r\n\r\n      <NavLink to='/' exact activeClassName='active-link'>\r\n          <span className=\"material-icons\">\r\n            house\r\n          </span>\r\n          <span className='title-todo'>\r\n            Задачи\r\n          </span>\r\n          <span className='count-todo'>\r\n            {todos.length}\r\n          </span>\r\n        </NavLink>\r\n\r\n        <NavLink to='/important' activeClassName='active-link'>\r\n          <span className=\"material-icons\">\r\n            star_border\r\n          </span>   \r\n          <span className='title-todo'>\r\n            Важно\r\n          </span>\r\n          <span className='count-todo'>\r\n            {todos.filter((todo: ITodo) => todo.imp).length}\r\n          </span>\r\n        </NavLink>\r\n        \r\n      </MyMenuNav>\r\n\r\n    </MyMenu>\r\n  )\r\n}\r\n\r\nexport default Menu","import styled from 'styled-components'\r\n\r\nexport const MyToolbar = styled.div`\r\n  display: flex;\r\n  padding: 12px 16px 0;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n\r\n  .popup-enter {\r\n    opacity: 0;\r\n  }\r\n  .popup-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 400ms ease-in;\r\n  }\r\n  .popup-exit {\r\n    opacity: 1;\r\n  }\r\n  .popup-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 400ms ease-in;\r\n  }\r\n`\r\nexport const MyToolbarTitle = styled.div`\r\n  height: 38px;\r\n  h2{\r\n    height: 38px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    color: #7464C0;\r\n  }\r\n`\r\n\r\nexport const MyToolbarSort = styled.button`\r\n  margin-left: 20px;\r\n  height: 38px;\r\n  display: ${(props: {bg: boolean, path: boolean}) => (props.path ? 'flex' : 'none')};\r\n  align-items: center;\r\n  padding: 0 5px ;\r\n  background: ${(props: {bg: boolean, path: boolean}) => (props.bg ? '#E0E0E0' : '#fff')};\r\n  border: transparent;\r\n  outline: none;\r\n  color: #7464C0;\r\n  :hover{\r\n    background: #E0E0E0;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const MyPopup = styled.div`\r\n  position: absolute;\r\n  top: 104px;\r\n  right: 16px;\r\n  z-index: 100;\r\n  width: 240px;\r\n  min-height: 200px;\r\n  max-height: 250px;\r\n  background: #fff;\r\n  color: #7c7e81;\r\n  border-radius: 3px;\r\n  box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n\r\n  .popup-title{\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 12px 0;\r\n    border-bottom: 1px solid #D3D3D3;\r\n    font-weight: 500;\r\n  }\r\n  .popup-wrap{\r\n    padding: 10px 0;\r\n  }\r\n  .popup-item{\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    span:last-child{\r\n      font-size: 16px;\r\n      margin-left: 10px;\r\n    }\r\n    :hover{\r\n      background: #E0E0E0;\r\n      color: #7464C0;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`","import React, { ReactElement } from 'react'\r\nimport {MyPopup} from './Popup.styled'\r\n\r\ninterface IPopupProps {\r\n  sort: React.Ref<HTMLDivElement>\r\n  setSortBy: (value: boolean) => any\r\n  setSortText: (value: string) => any\r\n  setOpenPopup: (value: boolean) => any\r\n}\r\n\r\nexport const Popup: React.FC<IPopupProps> = (props): ReactElement => {\r\n\r\n  const {sort, setSortBy, setSortText, setOpenPopup} = props\r\n\r\n  const sortHandler = (text: string) => {\r\n    setSortText(text)\r\n    setSortBy(true)\r\n    setOpenPopup(false)\r\n  }\r\n  \r\n  return (\r\n    <MyPopup ref={sort}>\r\n      \r\n      <div className='popup-title'>\r\n        Порядок сортировки\r\n      </div>\r\n\r\n      <div className='popup-wrap'>\r\n\r\n        <div className='popup-item' onClick={() => sortHandler('по алфавиту')}>\r\n          <span className=\"material-icons\">\r\n            text_rotate_vertical\r\n          </span>\r\n          <span>По алфавиту</span>\r\n        </div>\r\n\r\n        <div className='popup-item' onClick={() => sortHandler('по важности')}>\r\n          <span className=\"material-icons\">\r\n            star_border\r\n          </span>\r\n          <span>По важности</span>\r\n        </div>\r\n\r\n        <div className='popup-item' onClick={() => sortHandler('по выполненому')}>\r\n          <span className=\"material-icons\">\r\n            check_circle_outline\r\n          </span>\r\n          <span>По выполненому</span>\r\n        </div>\r\n\r\n        <div className='popup-item' onClick={() => sortHandler('по дате создания')}>\r\n          <span className=\"material-icons\">\r\n            event\r\n          </span>\r\n          <span>По дате создания</span>\r\n        </div>\r\n\r\n      </div>\r\n      \r\n    </MyPopup> \r\n  )\r\n}\r\n","import React, { ReactElement, useRef, useState, useEffect } from 'react'\r\nimport {\r\n  MyToolbar,\r\n  MyToolbarTitle,\r\n  MyToolbarSort,\r\n} from './TodoToolbar.styled'\r\nimport { useClose } from '../../hooks/close.hook'\r\nimport { Popup } from '../Popup/Popup'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\n\r\ninterface ITodoToolbarProps {\r\n  title: string\r\n  setSortBy?: (value: boolean) => void \r\n  setSortText?: (value: string) => void \r\n}\r\n\r\nexport const TodoToolbar: React.FC<any> = (props): ReactElement => {\r\n  \r\n  const {title, setSortBy, setSortText} = props\r\n\r\n  const [openPopup, setOpenPopup] = useState<boolean>(false)\r\n  const [path, setPath] = useState<string>('')\r\n  const sort = useRef<HTMLDivElement>(null)\r\n\r\n  useClose(sort, () => setOpenPopup(false))\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    setPath(history.location.pathname)\r\n  }, [history])\r\n\r\n  return (\r\n    <MyToolbar>\r\n\r\n      <MyToolbarTitle>\r\n        <h2>{title}</h2>\r\n      </MyToolbarTitle>\r\n\r\n      <MyToolbarSort \r\n        onClick={() => setOpenPopup(true)} \r\n        disabled={openPopup}\r\n        bg={openPopup}\r\n        path={path === '/' ? true : false}\r\n      >\r\n        <span className=\"material-icons\">\r\n          sort\r\n        </span>\r\n        <span>\r\n          Сортировка\r\n        </span>\r\n      </MyToolbarSort>\r\n\r\n      \r\n      <CSSTransition\r\n        in={openPopup}\r\n        timeout={500}\r\n        classNames='popup'\r\n        unmountOnExit\r\n      >\r\n        <Popup \r\n          sort={sort} \r\n          setSortBy={setSortBy} \r\n          setSortText={setSortText}\r\n          setOpenPopup={setOpenPopup}\r\n        /> \r\n      </CSSTransition>\r\n      \r\n    </MyToolbar>\r\n  )\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useClose = (ref: any, close: any) => {\r\n  useEffect(() => {\r\n    \r\n    const listener = (event: any) => {\r\n      if (\r\n        ref.current &&\r\n        event.target &&\r\n        ref.current.contains(event.target) \r\n      ) {\r\n        return \r\n      }\r\n      close()\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", listener)\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener)\r\n    }\r\n  }, [ref, close])\r\n}","import styled from 'styled-components'\r\n\r\nexport const MyTodoList = styled.div`\r\n  max-height: 100vh;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  .todo-enter {\r\n    opacity: 0;\r\n  }\r\n  .todo-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 400ms ease-in;\r\n  }\r\n  .todo-exit {\r\n    opacity: 1;\r\n  }\r\n  .todo-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 400ms ease-in;\r\n  }\r\n  ::-webkit-scrollbar { \r\n    width: 5px; \r\n    height: 5px;\r\n  }\r\n  ::-webkit-scrollbar-button {\r\n    background-color: #666;\r\n  }\r\n  ::-webkit-scrollbar-track {  \r\n    background-color: #999;\r\n  }\r\n  ::-webkit-scrollbar-track-piece { \r\n    background-color: #ffffff;\r\n  }\r\n  ::-webkit-scrollbar-thumb { \r\n    height: 50px; \r\n    background-color: #ada7c9; \r\n    border-radius: 3px;\r\n  }\r\n  ::-webkit-scrollbar-corner { \r\n    background-color: #999;\r\n  }\r\n  ::-webkit-resizer { \r\n    background-color: #666;\r\n  }\r\n`\r\nexport const MyTodo = styled.div`\r\n  margin: 0 20px;\r\n  min-height: 50px;\r\n  max-height: 500px;\r\n  border-bottom: 1px solid #D3D3D3;\r\n  display: flex;\r\n  span{\r\n    font-size: 22px;\r\n    height: 100%;\r\n    padding: 12px 0;\r\n    color: #7464C0;\r\n    :hover{\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .checkbox{\r\n    width: 24px;\r\n  }\r\n  .star{\r\n    width: 24px;\r\n  }\r\n  .delete{\r\n    width: 24px;\r\n    color: #34373d;\r\n  }\r\n  \r\n`\r\nexport const MyTodoContent = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  padding: 10px 0;  \r\n  margin: 0 14px;\r\n  font-size: 16px;\r\n  width: 95%;\r\n  color: ${(props: {completed: boolean}) => (props.completed ? '#c3c3c3' : '#34373d')};\r\n  text-decoration: ${(props: {completed: boolean}) => (props.completed ? 'line-through' : 'none')};\r\n`","import styled from 'styled-components'\r\n\r\nexport const MyTodoEmpty = styled.h1`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  color: #34373d;\r\n`","import React, { ReactElement } from 'react'\r\nimport {MyTodoEmpty} from './TodoEmpty.styled'\r\n\r\nexport const TodoEmpty = (): ReactElement => {\r\n  return (\r\n    <MyTodoEmpty>\r\n      To Do пустой\r\n    </MyTodoEmpty>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ITodo } from '../../store/types/types'\r\nimport {\r\n  deleteTodo,\r\n  toggleImpTodo,\r\n  toggleTodoCompleted,\r\n} from '../../store/actions/todo'\r\nimport {\r\n  MyTodoList,\r\n  MyTodo,\r\n  MyTodoContent\r\n} from './TodoList.styled'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\nimport { TodoEmpty } from '../TodoEmpty/TodoEmpty'\r\nimport {AppState} from '../../store/configureStore'\r\nimport {ITodoState} from '../../store/types/types'\r\n\r\ninterface ITodoListProps {\r\n\r\n}\r\n\r\nconst TodoList: React.FC<ITodoListProps> = (props): ReactElement => {\r\n\r\n  const todos = useSelector<AppState, ITodoState['todos']>(state => state.todo.todos)\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const addToImpHandler = (todo: ITodo) => {\r\n    dispatch(toggleImpTodo(todo.id))\r\n  }\r\n  const delFromImpHandler = (id: string) => {\r\n    dispatch(toggleImpTodo(id))\r\n  }\r\n  const toggleTodoCompletedHandler = (id: string) => {\r\n    dispatch(toggleTodoCompleted(id))\r\n  }\r\n  const deleteTodoHandler = (id: string) => {\r\n    dispatch(deleteTodo(id))\r\n  }\r\n  \r\n  return (\r\n    <MyTodoList>\r\n      <TransitionGroup>\r\n        {todos.length &&\r\n          todos.map((todo: ITodo) => (\r\n            <CSSTransition \r\n            key={todo.id}\r\n            timeout={500}\r\n            classNames='todo'\r\n            >\r\n              <MyTodo >\r\n                {todo.completed ? \r\n                  <span className=\"material-icons\" onClick={() => toggleTodoCompletedHandler(todo.id)}>\r\n                    check_box\r\n                  </span>\r\n                  :\r\n                  <span className=\"material-icons checkbox\" onClick={() => toggleTodoCompletedHandler(todo.id)}>\r\n                    check_box_outline_blank\r\n                  </span>\r\n                }\r\n                \r\n                <MyTodoContent completed={todo.completed}>\r\n                  {todo.title}\r\n                </MyTodoContent>\r\n                {todo.imp ?\r\n                  <span className=\"material-icons\" onClick={() => delFromImpHandler(todo.id)}>\r\n                    star\r\n                  </span>\r\n                  :\r\n                  <span className=\"material-icons star\" onClick={() => addToImpHandler(todo)}>\r\n                    star_border\r\n                  </span>\r\n                }\r\n                \r\n                <span className=\"material-icons delete\" onClick={() => deleteTodoHandler(todo.id)}>\r\n                  delete\r\n                </span>\r\n              </MyTodo>\r\n            </CSSTransition>\r\n          ))\r\n        }\r\n      </TransitionGroup>\r\n\r\n      {!todos.length && <TodoEmpty/>}\r\n      \r\n    </MyTodoList>\r\n  )\r\n}\r\n\r\nexport default TodoList","import styled from 'styled-components'\r\n\r\nexport const MyInput = styled.div`\r\n  margin: 0 20px;\r\n  \r\n  height: 50px;\r\n  border-bottom: 1px solid #D3D3D3;\r\n  display: flex;\r\n  span{\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 28px;\r\n    height: 100%;\r\n    color: #7464C0;\r\n    :hover{\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  input{\r\n    margin-left: 10px;\r\n    width: 100%;\r\n    border: transparent;\r\n    outline: none;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: #757575;\r\n    ::placeholder {\r\n      //color: #757575;\r\n      color: #7464C0;\r\n    }\r\n  }\r\n  \r\n`","import React, { ReactElement, useRef, useState } from 'react'\r\nimport {ITodo} from '../../store/types/types'\r\nimport { MyInput } from './TodoInput.styled'\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (todo: ITodo) => void,\r\n  todoItem: (title: string) => ITodo\r\n}\r\n\r\nconst TodoInput: React.FC<ITodoInputProps> = (props): ReactElement => {\r\n\r\n  const {addTodo, todoItem} = props\r\n  const [title, setTitle] = useState<string>('')\r\n  const refInput = useRef<HTMLInputElement>(null)\r\n\r\n  const focuseInputHandler = () => {\r\n    refInput.current!.focus()  \r\n  }\r\n  \r\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  const onKeyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' && title.trim().length){ \r\n      addTodo(todoItem(title))\r\n      setTitle('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MyInput>\r\n      <span className=\"material-icons\" onClick={() => focuseInputHandler()}>\r\n        add\r\n      </span>\r\n      \r\n      <input \r\n        placeholder='Добавить' \r\n        ref={refInput}\r\n        value={title}\r\n        onChange={onChangeHandler}\r\n        onKeyPress={onKeyPressHandler}\r\n        maxLength={255}\r\n      />\r\n    </MyInput>\r\n  )\r\n}\r\n\r\nexport default TodoInput","import styled from 'styled-components'\r\n\r\nexport const MyPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`","import styled from 'styled-components'\r\n\r\nexport const MyTodoSort = styled.div`\r\n  padding: 0 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  color: #34373d;\r\n\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n  span{\r\n    cursor: pointer;\r\n  }\r\n  .close{\r\n    font-size: 18px;\r\n  }\r\n`","import React, { ReactElement, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { MyTodoSort } from './TodoSort.styled'\r\nimport { \r\n  sortByTitle,\r\n  sortByImp,\r\n  sortByCompleted,\r\n  sortByDate\r\n} from '../../store/actions/todo'\r\n\r\ninterface ITodoSortProps {\r\n  sortText: string\r\n  setSortBy: (value: boolean) => any\r\n}\r\n\r\nconst TodoSort: React.FC<ITodoSortProps> = (props): ReactElement => {\r\n\r\n  const {setSortBy, sortText} = props\r\n\r\n  const [sortIcon, setSortIcon] = useState<boolean>(false)\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const sortHandler = (orderBy: string) => {\r\n    if(sortText === 'по алфавиту'){\r\n      dispatch(sortByTitle(orderBy))\r\n    }else if(sortText === 'по важности'){\r\n      dispatch(sortByImp(orderBy))\r\n    }else if(sortText === 'по выполненому'){\r\n      dispatch(sortByCompleted(orderBy))\r\n    }else{\r\n      dispatch(sortByDate(orderBy))\r\n    }\r\n    setSortIcon(!sortIcon)\r\n  }\r\n\r\n  return (\r\n    <MyTodoSort>\r\n\r\n      {sortIcon ?\r\n        <span className=\"material-icons\" onClick={() => sortHandler('asc')}>\r\n          keyboard_arrow_down\r\n        </span>\r\n        :\r\n        <span className=\"material-icons\" onClick={() => sortHandler('desc')}>\r\n          keyboard_arrow_up\r\n        </span>\r\n      }\r\n      \r\n      <p>Сортировка {sortText}</p>\r\n\r\n      <span className=\"material-icons close\" onClick={() => setSortBy(false)}>\r\n        close\r\n      </span>\r\n\r\n    </MyTodoSort>\r\n  )\r\n}\r\n\r\nexport default TodoSort","import React, { ReactElement, useEffect, useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ITodo } from '../store/types/types'\r\nimport { TodoToolbar } from '../components/TodoToolbar/TodoToolbar'\r\nimport { addTodo } from '../store/actions/todo'\r\nimport TodoList from '../components/TodoList/TodoList'\r\nimport TodoInput from '../components/TodoInput/TodoInput'\r\nimport { MyPage } from './page.styled'\r\nimport TodoSort from '../components/TodoSort/TodoSort'\r\n\r\ninterface IHomeProps {\r\n  \r\n}\r\n\r\nconst Home = (props: IHomeProps): ReactElement => {\r\n  \r\n  const [title] = useState<string>('Задачи')\r\n  const [sortBy, setSortBy] = useState<boolean>(false)\r\n  \r\n  const [sortText, setSortText] = useState<string>('')\r\n  const dispatch = useDispatch()\r\n\r\n  const todoItem = (title: string) => ({\r\n    id: uuid(),\r\n    title: title,\r\n    date: new Date(Date.now()),\r\n    completed: false,\r\n    imp: false\r\n  })\r\n\r\n  const addTodoHandler = (todo: ITodo) => dispatch(addTodo(todo)) \r\n  \r\n  useEffect(() => {\r\n    document.title = title\r\n  })\r\n\r\n  useEffect(() => {\r\n    const savedSort: boolean = JSON.parse(localStorage.getItem('savedSort') || 'false')  \r\n    setSortBy(savedSort)\r\n    const savedTextSort: string = JSON.parse(localStorage.getItem('savedTextSort') || '')  \r\n    setSortText(savedTextSort)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('savedSort', JSON.stringify(sortBy))\r\n    localStorage.setItem('savedTextSort', JSON.stringify(sortText))\r\n  }, [sortBy, sortText])\r\n\r\n  return (\r\n    <MyPage>\r\n      <TodoToolbar \r\n        title={title}\r\n        setSortBy={setSortBy}\r\n        setSortText={setSortText}\r\n      />\r\n\r\n      {sortBy ? <TodoSort setSortBy={setSortBy} sortText={sortText}/> : null}\r\n\r\n      <TodoInput \r\n        addTodo={addTodoHandler} \r\n        todoItem={todoItem}\r\n      />\r\n      \r\n      <TodoList/>\r\n    </MyPage>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { ReactElement } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  deleteTodo, \r\n  toggleImpTodo,\r\n  toggleTodoCompleted\r\n} from '../../store/actions/todo'\r\nimport {\r\n  MyTodoList,\r\n  MyTodo,\r\n  MyTodoContent\r\n} from './TodoList.styled'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\nimport {AppState} from '../../store/configureStore'\r\nimport {ITodoState} from '../../store/types/types'\r\nimport {ITodo} from '../../store/types/types'\r\n\r\ninterface ITodoListImpProps {\r\n\r\n}\r\n\r\nconst TodoListImp: React.FC<ITodoListImpProps> = (props): ReactElement => {\r\n\r\n  const todos = useSelector<AppState, ITodoState['todos']>(state => state.todo.todos)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const deleteFromImpHandler = (id: string) => {\r\n    dispatch(toggleImpTodo(id))\r\n  }\r\n  const toggleTodoCompletedHandler = (id: string) => {\r\n    dispatch(toggleTodoCompleted(id))\r\n  }\r\n  const deleteTodoHandler = (id: string) => {\r\n    dispatch(deleteTodo(id))\r\n  }\r\n  return (\r\n    <MyTodoList>\r\n      <TransitionGroup>\r\n        {todos.filter((todo: ITodo) => todo.imp).map((todo: ITodo)=>(\r\n          <CSSTransition \r\n          key={todo.id}\r\n          timeout={500}\r\n          classNames='todo'\r\n          >\r\n            <MyTodo>\r\n              {todo.completed ?\r\n                <span className=\"material-icons\" onClick={() => toggleTodoCompletedHandler(todo.id)}>\r\n                  check_box\r\n                </span>\r\n                :\r\n                <span className=\"material-icons checkbox\" onClick={() => toggleTodoCompletedHandler(todo.id)}>\r\n                  check_box_outline_blank\r\n                </span>\r\n              }\r\n              \r\n              <MyTodoContent completed={todo.completed}>\r\n                {todo.title}\r\n              </MyTodoContent>\r\n              {todo.imp &&\r\n                <span className=\"material-icons\" onClick={() => deleteFromImpHandler(todo.id)}>\r\n                  star\r\n                </span>\r\n              }\r\n              \r\n              <span className=\"material-icons delete\" onClick={() => deleteTodoHandler(todo.id)}>\r\n                delete\r\n              </span>\r\n            </MyTodo>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </MyTodoList>\r\n  )\r\n}\r\n\r\nexport default TodoListImp\r\n","import React, { ReactElement, useEffect, useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ITodo } from '../store/types/types'\r\nimport { TodoToolbar } from '../components/TodoToolbar/TodoToolbar'\r\nimport TodoInput from '../components/TodoInput/TodoInput'\r\nimport TodoListImp from '../components/TodoList/TodoListImp'\r\nimport { addTodo, } from '../store/actions/todo'\r\nimport { MyPage } from './page.styled'\r\n\r\n\r\ninterface IImportantProps {\r\n\r\n}\r\n\r\nconst Important = (props: IImportantProps): ReactElement => {\r\n\r\n  const [title] = useState<string>('Важно')\r\n  const dispatch = useDispatch()\r\n\r\n  const todoItem = (title: string) => ({\r\n    id: uuid(),\r\n    title: title,\r\n    date: new Date(Date.now()),\r\n    completed: false,\r\n    imp: true\r\n  })\r\n\r\n  const addTodoHandler = (todo: ITodo) => {\r\n    dispatch(addTodo(todo))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = title\r\n  })\r\n\r\n  return (\r\n    <MyPage>\r\n      <TodoToolbar title={title}/>\r\n      <TodoInput addTodo={addTodoHandler} todoItem={todoItem}/>\r\n      <TodoListImp/>\r\n    </MyPage>\r\n  )\r\n}\r\n\r\nexport default Important","import styled from 'styled-components'\r\n\r\nexport const MyMain = styled.div`\r\n  display: flex;\r\n  height: 95vh;\r\n`","import React, { ReactElement, useState, useEffect } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {setTodo} from '../../store/actions/todo'\r\nimport Menu from '../Menu/Menu'\r\nimport Home from '../../pages/Home'\r\nimport Important from '../../pages/Important'\r\nimport { ITodoState } from '../../store/types/types'\r\nimport { ITodo } from '../../store/types/types'\r\nimport { MyMain } from './Main.styled'\r\nimport { AppState } from '../../store/configureStore'\r\n\r\n\r\ninterface IMainProps {\r\n\r\n}\r\n\r\nconst Main: React.FC<IMainProps> = (props): ReactElement => {\r\n  const [openMenu, setOpenMenu] = useState<boolean>(false)\r\n\r\n  const todos = useSelector<AppState, ITodoState['todos']>(state => state.todo.todos)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    const savedMenu: boolean = JSON.parse(localStorage.getItem('openMenu') || 'false')\r\n    setOpenMenu(savedMenu)\r\n    const todos: ITodo[] = JSON.parse(localStorage.getItem('todos') || '[]')\r\n    dispatch(setTodo(todos))\r\n  }, [dispatch, setOpenMenu])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('openMenu', JSON.stringify(openMenu))\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [openMenu, todos])\r\n\r\n  return (\r\n    <MyMain>\r\n      <Menu\r\n        openMenu={openMenu} \r\n        setOpenMenu={setOpenMenu} \r\n        todos={todos}\r\n      />\r\n      <Switch>\r\n        <Route path='/' exact component={Home}/>\r\n        <Route path='/important' component={Important}/>\r\n      </Switch>\r\n    </MyMain>\r\n  )\r\n}\r\n\r\nexport default Main","import React, { ReactElement } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from '../../store/configureStore'\nimport { GlobalStyle } from './App.styled'\nimport { Header } from '../Header/Header'\nimport Main from '../Main/Main'\n\nconst App: React.FC = (): ReactElement => { \n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <GlobalStyle/>\n        <Header/>\n        <Main/>\n      </Provider> \n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}