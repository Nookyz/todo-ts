{"version":3,"sources":["store/types.tsx","store/reducers/todo.tsx","store/reducers/root.tsx","components/App/App.styled.tsx","components/Header/Header.styled.tsx","components/Header/Header.tsx","store/actions/todo.tsx","components/Menu/Menu.styled.tsx","components/Menu/Menu.tsx","components/TodoToolbar/TodoToolbar.styled.tsx","components/Popup/Popup.styled.tsx","components/Popup/Popup.tsx","components/TodoToolbar/TodoToolbar.tsx","hooks/close.hook.tsx","components/TodoList/TodoList.styled.tsx","components/TodoEmpty/TodoEmpty.styled.tsx","components/TodoEmpty/TodoEmpty.tsx","components/TodoList/TodoList.tsx","components/TodoInput/TodoInput.styled.tsx","components/TodoInput/TodoInput.tsx","pages/page.styled.tsx","components/TodoSort/TodoSort.styled.tsx","components/TodoSort/TodoSort.tsx","pages/Home.tsx","pages/MyDay.tsx","components/TodoList/TodoListImp.tsx","pages/Important.tsx","components/Main/Main.styled.tsx","components/Main/Main.tsx","components/App/App.tsx","index.tsx"],"names":["Todos","initialState","todos","impTodos","rootReducer","combineReducers","todo","state","action","type","SET_TODO","payload","SET_TODO_IMPORTANT","ADD_TODO","ADD_TODO_IMPORTANT","DELETE_TODO","filter","id","DELETE_FROM_IMP","TOGGLE_TODO","map","completed","TOGGLE_IMP_TODO","imp","SORT_BY_TITLE","sortBy","o","title","reverse","SORT_BY_IMP","SORT_BY_DONE","SORT_BY_DATE","date","store","createStore","GlobalStyle","createGlobalStyle","MyHeader","styled","div","MyHeaderTitle","Header","addTodo","addTodoImp","deleteTodo","deleteFromImp","toggleTodo","toggleImpTodo","MyMenu","props","open","MyMenuHeader","MyMenuNav","Menu","openMenu","setOpenMenu","className","onClick","to","activeClassName","length","exact","MyToolbar","MyToolbarTitle","MyToolbarSort","button","path","bg","MyPopup","Popup","sort","setSortBy","setSortText","setOpenPopup","sortHandler","text","ref","TodoToolbar","close","useState","openPopup","setPath","useRef","useEffect","listener","event","current","target","contains","document","addEventListener","removeEventListener","history","useHistory","location","pathname","disabled","CSSTransition","in","timeout","classNames","unmountOnExit","MyTodoList","MyTodo","MyTodoContent","MyTodoEmpty","TodoEmpty","src","alt","connect","dispatch","TransitionGroup","key","delFromImpHandler","addToImpHandler","MyInput","TodoInput","todoItem","setTitle","refInput","focus","placeholder","value","onChange","e","onKeyPress","trim","maxLength","MyPage","MyTodoSort","sortByTitle","orderBy","sortByImp","sortByDone","sortByDate","sortText","sortIcon","setSortIcon","savedSort","JSON","parse","localStorage","getItem","savedTextSort","setItem","stringify","uuid","Date","now","MyDay","Fragment","deleteFromImpHandler","MyMain","setTodo","setTodoImp","savedMenu","todosImp","component","Home","Important","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2f36d9fc.chunk.js","sourcesContent":["export interface ITodo {\r\n  id: string\r\n  title: string\r\n  date: Date\r\n  imp: boolean\r\n  completed: boolean\r\n}\r\n\r\nexport interface ITodoState {\r\n  readonly todos: ITodo[]\r\n  readonly impTodos: ITodo[]\r\n}\r\n\r\nexport enum Todos {\r\n  SET_TODO = 'SET_TODO',\r\n  SET_TODO_IMPORTANT = 'SET_TODO_IMPORTANT',\r\n  ADD_TODO = 'ADD_TODO',\r\n  ADD_TODO_IMPORTANT = 'ADD_TODO_IMPORTANT',\r\n  DELETE_TODO = 'DELETE_TODO',\r\n  DELETE_FROM_IMP = 'DELETE_FROM_IMP',\r\n  TOGGLE_TODO = 'TOGGLE_TODO',\r\n  TOGGLE_IMP_TODO = 'TOGGLE_IMP_TODO',\r\n\r\n  SORT_BY_TITLE = 'SORT_BY_TITLE',\r\n  SORT_BY_IMP = 'SORT_BY_IMP',\r\n  SORT_BY_DONE = 'SORT_BY_DONE',\r\n  SORT_BY_DATE = 'SORT_BY_DATE'\r\n}","import {Todos} from '../types'\r\nimport {ITodoState} from '../types'\r\nimport {ITodo} from '../types'\r\nimport {sortBy} from 'lodash'\r\n\r\nconst initialState: ITodoState = {\r\n  todos: [],\r\n  impTodos: []\r\n} \r\n\r\nexport const todoReducer = (state = initialState, action: any) => {\r\n\r\n  switch(action.type){\r\n    case Todos.SET_TODO:\r\n      return {\r\n        ...state,\r\n        todos: action.payload\r\n      }\r\n    case Todos.SET_TODO_IMPORTANT:\r\n      return {\r\n        ...state,\r\n        impTodos: action.payload\r\n      }\r\n    case Todos.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos]\r\n      }\r\n    case Todos.ADD_TODO_IMPORTANT:\r\n      return {\r\n        ...state,\r\n        impTodos: [action.payload, ...state.impTodos]\r\n      }\r\n    case Todos.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== action.payload),\r\n        impTodos: state.impTodos.filter(todo => todo.id !== action.payload),\r\n      }\r\n    case Todos.DELETE_FROM_IMP:\r\n      return {\r\n        ...state,\r\n        impTodos: state.impTodos.filter(todo => todo.id !== action.payload),\r\n      }\r\n    case Todos.TOGGLE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>{\r\n          if(todo.id === action.payload){\r\n            todo.completed = !todo.completed\r\n          }\r\n          return todo\r\n        }),\r\n        impTodos: state.impTodos.map(todo =>{\r\n          if(todo.id === action.payload){\r\n            todo.completed = !todo.completed\r\n          }\r\n          return todo\r\n        })\r\n      }\r\n    case Todos.TOGGLE_IMP_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>{\r\n          if(todo.id === action.payload){\r\n            todo.imp = !todo.imp\r\n          }\r\n          return todo\r\n        }),\r\n        impTodos: state.impTodos.map(todo =>{\r\n          if(todo.id === action.payload){\r\n            todo.imp = !todo.imp\r\n          }\r\n          return todo\r\n        })\r\n      }\r\n    case Todos.SORT_BY_TITLE:\r\n      if(action.payload === 'asc'){\r\n        return {\r\n          ...state,\r\n          todos: sortBy(state.todos, [(o: ITodo) => o.title])\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: sortBy(state.todos, [(o: ITodo) => o.title]).reverse()\r\n      }\r\n    case Todos.SORT_BY_IMP:\r\n      if(action.payload === 'asc'){\r\n        return {\r\n          ...state,\r\n          todos: sortBy(state.todos, [(o: ITodo) => o.imp])\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: sortBy(state.todos, [(o: ITodo) => o.imp]).reverse()\r\n      }\r\n    case Todos.SORT_BY_DONE:\r\n      if(action.payload === 'asc'){\r\n        return {\r\n          ...state,\r\n          todos: sortBy(state.todos, [(o: ITodo) => o.completed])\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: sortBy(state.todos, [(o: ITodo) => o.completed]).reverse()\r\n      }\r\n    case Todos.SORT_BY_DATE:\r\n      if(action.payload === 'asc'){\r\n        return {\r\n          ...state,\r\n          todos: sortBy(state.todos, [(o: ITodo) => o.date])\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        todos: sortBy(state.todos, [(o: ITodo) => o.date]).reverse()\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {createStore, combineReducers} from 'redux'\r\nimport {todoReducer} from './todo'\r\n\r\nconst rootReducer = combineReducers({\r\n  todo: todoReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer)","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    text-decoration: none;\r\n    user-select: none;\r\n  }\r\n  #root{\r\n    height: 100%;\r\n  }\r\n  body {\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n`","import styled from 'styled-components'\r\n\r\nexport const MyHeader = styled.div`\r\n  height: 5vh;\r\n  background: #ada7c9;\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 1px solid #9186C7;\r\n`\r\nexport const MyHeaderTitle = styled.div`\r\n  font-size: 24px;\r\n  padding: 8px;\r\n  color: #fff;\r\n`","import React, { ReactElement } from 'react'\r\nimport {\r\n  MyHeader,\r\n  MyHeaderTitle\r\n} from './Header.styled'\r\n\r\nexport const Header = (): ReactElement => {\r\n  return (\r\n    <MyHeader>\r\n      <MyHeaderTitle>\r\n        To Do\r\n      </MyHeaderTitle>\r\n    </MyHeader>\r\n  )\r\n}\r\n","import {Todos} from '../types'\r\nimport {ITodo} from '../types'\r\n\r\n// SET\r\nexport const setTodo = (todos: ITodo[]) => ({\r\n  type: Todos.SET_TODO,\r\n  payload: todos\r\n})\r\n\r\nexport const setTodoImp = (todos: ITodo[]) => ({\r\n  type: Todos.SET_TODO_IMPORTANT,\r\n  payload: todos\r\n})\r\n\r\n// ADD\r\nexport const addTodo = (todos: ITodo) => ({\r\n  type: Todos.ADD_TODO,\r\n  payload: todos\r\n})\r\n\r\nexport const addTodoImp = (todos: ITodo) => ({\r\n  type: Todos.ADD_TODO_IMPORTANT,\r\n  payload: todos\r\n})\r\n\r\n// DELETE\r\nexport const deleteTodo = (id: string) => ({\r\n  type: Todos.DELETE_TODO,\r\n  payload: id\r\n})\r\n\r\nexport const deleteFromImp = (id: string) => ({\r\n  type: Todos.DELETE_FROM_IMP,\r\n  payload: id\r\n})\r\n\r\n// TOGGLE DONE\r\nexport const toggleTodo = (id: string) => ({\r\n  type: Todos.TOGGLE_TODO,\r\n  payload: id\r\n})\r\n\r\n// TOGGLE STAR(IMP)\r\nexport const toggleImpTodo = (id: string) => ({\r\n  type: Todos.TOGGLE_IMP_TODO,\r\n  payload: id\r\n})\r\n\r\n// SORT \r\nexport const sortByTitle = (orderBy: string) => ({\r\n  type: Todos.SORT_BY_TITLE,\r\n  payload: orderBy\r\n})\r\n\r\nexport const sortByImp = (orderBy: string) => ({\r\n  type: Todos.SORT_BY_IMP,\r\n  payload: orderBy\r\n})\r\n\r\nexport const sortByDone = (orderBy: string) => ({\r\n  type: Todos.SORT_BY_DONE,\r\n  payload: orderBy\r\n})\r\n\r\nexport const sortByDate = (orderBy: string) => ({\r\n  type: Todos.SORT_BY_DATE,\r\n  payload: orderBy\r\n})","import styled from 'styled-components'\r\n\r\nexport const MyMenu = styled.div`\r\n  background: #f4f4f4; \r\n  width: 280px;\r\n  border-right: 1px solid #D3D3D3;\r\n  transition: width 0.5s ease-in-out;\r\n  width: ${(props: {open: boolean}) => (props.open ? \"280px\" : \"50px\")};\r\n\r\n`\r\nexport const MyMenuHeader = styled.div`\r\n  margin: 12px 0;\r\n  padding: 0 12px;\r\n  \r\n  width: 100%;\r\n  height: 30px;\r\n  \r\n  span{\r\n    height: 100%;\r\n    padding: 3px;\r\n    color: #34373d;\r\n    transition: all 0.2s ease-in-out;\r\n    :hover{\r\n      background: #ada7c9;\r\n      cursor: pointer;\r\n      box-shadow: 0 0 2px rgba(0,0,0,0.4);\r\n      color: #FFF;\r\n    }\r\n  }\r\n`\r\nexport const MyMenuNav = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  a{\r\n    display: grid;\r\n    grid-template-columns: 35px 1fr 25px;\r\n    padding: 8px 0 8px 14px;\r\n    align-items: center;\r\n    color: #34373d;\r\n    transition: all 0.2s ease-in-out;\r\n    :hover{\r\n      background: #E0E0E0;\r\n    }\r\n    span:first-child{\r\n      font-size: 24px; \r\n      margin-right: 10px;\r\n    }\r\n    \r\n    .title-todo{\r\n      display: ${(props: {open: boolean}) => (props.open ? null : 'none')};\r\n      animation: ${(props: {open: boolean}) => (props.open ? 'showText 0.7s ease-in-out' : 'hideText 0.7s ease-in-out')};\r\n      opacity: ${(props: {open: boolean}) => (props.open ? '1' : '0')};\r\n      @keyframes showText {\r\n        from {\r\n          opacity: 0;\r\n        }\r\n        to {\r\n          opacity: 1;\r\n        }\r\n      }\r\n      @keyframes hideText {\r\n        from {\r\n          opacity: 1;\r\n        }\r\n        to {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    }\r\n    .count-todo{     \r\n      display: ${(props: {open: boolean}) => (props.open ? 'flex' : 'none')};     \r\n      animation: ${(props: {open: boolean}) => (props.open ? 'showText 0.7s ease-in-out' : 'hideText 0.7s ease-in-out')};\r\n      @keyframes showText {\r\n        from {\r\n          opacity: 0;\r\n        }\r\n        to {\r\n          opacity: 1;\r\n        }\r\n      }\r\n      @keyframes hideText {\r\n        from {\r\n          opacity: 1;\r\n        }\r\n        to {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .active-link{\r\n    color: #7464C0;\r\n  }\r\n`","import React, { ReactElement } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {ITodo} from '../../store/types'\r\nimport {\r\n  MyMenu,\r\n  MyMenuHeader,\r\n  MyMenuNav\r\n} from './Menu.styled'\r\n\r\ninterface IMenuProps {\r\n  openMenu: boolean\r\n  setOpenMenu(value: boolean): void\r\n  todos: ITodo[]\r\n  impTodos: ITodo[]\r\n}\r\n\r\nconst Menu = (props: IMenuProps): ReactElement => {\r\n\r\n  const {openMenu, setOpenMenu, todos, impTodos} = props\r\n\r\n  return (\r\n    <MyMenu open={openMenu}>\r\n\r\n      <MyMenuHeader >\r\n        <span className=\"material-icons\" onClick={() => setOpenMenu(!openMenu)}>\r\n          menu\r\n        </span>\r\n      </MyMenuHeader>\r\n\r\n      <MyMenuNav open={openMenu}>\r\n\r\n        <NavLink to='/myday' activeClassName='active-link'>\r\n          <span className=\"material-icons\">\r\n            wb_sunny\r\n          </span>\r\n          <span className='title-todo'>\r\n            Сегодня\r\n          </span>\r\n        </NavLink>\r\n        \r\n        <NavLink to='/important' activeClassName='active-link'>\r\n          <span className=\"material-icons\">\r\n            star_border\r\n          </span>   \r\n          <span className='title-todo'>\r\n            Важно\r\n          </span>\r\n          <span className='count-todo'>\r\n            {impTodos.length}\r\n          </span>\r\n        </NavLink>\r\n\r\n        <NavLink to='/todo-ts' exact activeClassName='active-link'>\r\n          <span className=\"material-icons\">\r\n            house\r\n          </span>\r\n          <span className='title-todo'>\r\n            Задачи\r\n          </span>\r\n          <span className='count-todo'>\r\n            {todos.length}\r\n          </span>\r\n        </NavLink>\r\n        \r\n      </MyMenuNav>\r\n\r\n    </MyMenu>\r\n  )\r\n}\r\n\r\nexport default Menu","import styled from 'styled-components'\r\n\r\nexport const MyToolbar = styled.div`\r\n  display: flex;\r\n  padding: 12px 16px 0;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n\r\n  .popup-enter {\r\n    opacity: 0;\r\n  }\r\n  .popup-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 400ms ease-in;\r\n  }\r\n  .popup-exit {\r\n    opacity: 1;\r\n  }\r\n  .popup-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 400ms ease-in;\r\n  }\r\n`\r\nexport const MyToolbarTitle = styled.div`\r\n  height: 38px;\r\n  h2{\r\n    height: 38px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    color: #7464C0;\r\n  }\r\n`\r\n\r\nexport const MyToolbarSort = styled.button`\r\n  margin-left: 20px;\r\n  height: 38px;\r\n  display: ${(props: {bg: boolean, path: boolean}) => (props.path ? 'flex' : 'none')};\r\n  align-items: center;\r\n  padding: 0 5px ;\r\n  background: ${(props: {bg: boolean, path: boolean}) => (props.bg ? '#E0E0E0' : '#fff')};\r\n  border: transparent;\r\n  outline: none;\r\n  color: #7464C0;\r\n  :hover{\r\n    background: #E0E0E0;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const MyPopup = styled.div`\r\n  position: absolute;\r\n  top: 104px;\r\n  right: 16px;\r\n  z-index: 100;\r\n  width: 240px;\r\n  min-height: 200px;\r\n  max-height: 250px;\r\n  background: #fff;\r\n  color: #7c7e81;\r\n  border-radius: 3px;\r\n  box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n\r\n  .popup-title{\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 12px 0;\r\n    border-bottom: 1px solid #D3D3D3;\r\n    font-weight: 500;\r\n  }\r\n  .popup-wrap{\r\n    padding: 10px 0;\r\n  }\r\n  .popup-item{\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    span:last-child{\r\n      font-size: 16px;\r\n      margin-left: 10px;\r\n    }\r\n    :hover{\r\n      background: #E0E0E0;\r\n      color: #7464C0;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`","import React, { ReactElement } from 'react'\r\nimport {MyPopup} from './Popup.styled'\r\n\r\ninterface IPopupProps {\r\n  sort: React.Ref<HTMLDivElement>\r\n  setSortBy: (value: boolean) => any\r\n  setSortText: (value: string) => any\r\n  setOpenPopup: (value: boolean) => any\r\n}\r\n\r\nexport const Popup = (props: IPopupProps): ReactElement => {\r\n\r\n  const {sort, setSortBy, setSortText, setOpenPopup} = props\r\n\r\n  const sortHandler = (text: string) => {\r\n    setSortText(text)\r\n    setSortBy(true)\r\n    setOpenPopup(false)\r\n  }\r\n  \r\n  return (\r\n    <MyPopup ref={sort}>\r\n      \r\n      <div className='popup-title'>\r\n        Порядок сортировки\r\n      </div>\r\n\r\n      <div className='popup-wrap'>\r\n\r\n        <div className='popup-item' onClick={() => sortHandler('по алфавиту')}>\r\n          <span className=\"material-icons\">\r\n            text_rotate_vertical\r\n          </span>\r\n          <span>По алфавиту</span>\r\n        </div>\r\n\r\n        <div className='popup-item' onClick={() => sortHandler('по важности')}>\r\n          <span className=\"material-icons\">\r\n            star_border\r\n          </span>\r\n          <span>По важности</span>\r\n        </div>\r\n\r\n        <div className='popup-item' onClick={() => sortHandler('по выполненому')}>\r\n          <span className=\"material-icons\">\r\n            check_circle_outline\r\n          </span>\r\n          <span>По выполненому</span>\r\n        </div>\r\n\r\n        <div className='popup-item' onClick={() => sortHandler('по дате создания')}>\r\n          <span className=\"material-icons\">\r\n            event\r\n          </span>\r\n          <span>По дате создания</span>\r\n        </div>\r\n\r\n      </div>\r\n      \r\n    </MyPopup> \r\n  )\r\n}\r\n","import React, { ReactElement, useRef, useState, useEffect } from 'react'\r\nimport {\r\n  MyToolbar,\r\n  MyToolbarTitle,\r\n  MyToolbarSort,\r\n} from './TodoToolbar.styled'\r\nimport { useClose } from '../../hooks/close.hook'\r\nimport { Popup } from '../Popup/Popup'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\n\r\ninterface ITodoToolbarProps {\r\n  title: string\r\n  setSortBy?: (value: boolean) => void \r\n  setSortText?: (value: string) => void \r\n}\r\n\r\nexport const TodoToolbar = (props: any): ReactElement => {\r\n  \r\n  const {title, setSortBy, setSortText} = props\r\n\r\n  const [openPopup, setOpenPopup] = useState<boolean>(false)\r\n  const [path, setPath] = useState<string>('')\r\n  const sort = useRef<HTMLDivElement>(null)\r\n\r\n  useClose(sort, () => setOpenPopup(false))\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    setPath(history.location.pathname)\r\n  }, [history])\r\n\r\n  return (\r\n    <MyToolbar>\r\n\r\n      <MyToolbarTitle>\r\n        <h2>{title}</h2>\r\n      </MyToolbarTitle>\r\n\r\n      <MyToolbarSort \r\n        onClick={() => setOpenPopup(true)} \r\n        disabled={openPopup}\r\n        bg={openPopup}\r\n        path={path === '/' ? true : false}\r\n      >\r\n        <span className=\"material-icons\">\r\n          sort\r\n        </span>\r\n        <span>\r\n          Сортировка\r\n        </span>\r\n      </MyToolbarSort>\r\n\r\n      \r\n      <CSSTransition\r\n        in={openPopup}\r\n        timeout={500}\r\n        classNames='popup'\r\n        unmountOnExit\r\n      >\r\n        <Popup \r\n          sort={sort} \r\n          setSortBy={setSortBy} \r\n          setSortText={setSortText}\r\n          setOpenPopup={setOpenPopup}\r\n        /> \r\n      </CSSTransition>\r\n      \r\n    </MyToolbar>\r\n  )\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useClose = (ref: any, close: any) => {\r\n  useEffect(() => {\r\n    \r\n    const listener = (event: any) => {\r\n      if (\r\n        ref.current &&\r\n        event.target &&\r\n        ref.current.contains(event.target) \r\n      ) {\r\n        return \r\n      }\r\n      close()\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", listener)\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener)\r\n    }\r\n  }, [ref, close])\r\n}","import styled from 'styled-components'\r\n\r\nexport const MyTodoList = styled.div`\r\n  max-height: 100vh;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  .todo-enter {\r\n    opacity: 0;\r\n  }\r\n  .todo-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 400ms ease-in;\r\n  }\r\n  .todo-exit {\r\n    opacity: 1;\r\n  }\r\n  .todo-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 400ms ease-in;\r\n  }\r\n  ::-webkit-scrollbar { \r\n    width: 5px; \r\n    height: 5px;\r\n  }\r\n  ::-webkit-scrollbar-button {\r\n    background-color: #666;\r\n  }\r\n  ::-webkit-scrollbar-track {  \r\n    background-color: #999;\r\n  }\r\n  ::-webkit-scrollbar-track-piece { \r\n    background-color: #ffffff;\r\n  }\r\n  ::-webkit-scrollbar-thumb { \r\n    height: 50px; \r\n    background-color: #ada7c9; \r\n    border-radius: 3px;\r\n  }\r\n  ::-webkit-scrollbar-corner { \r\n    background-color: #999;\r\n  }\r\n  ::-webkit-resizer { \r\n    background-color: #666;\r\n  }\r\n`\r\nexport const MyTodo = styled.div`\r\n  margin: 0 20px;\r\n  min-height: 50px;\r\n  max-height: 500px;\r\n  border-bottom: 1px solid #D3D3D3;\r\n  display: flex;\r\n  span{\r\n    font-size: 22px;\r\n    height: 100%;\r\n    padding: 12px 0;\r\n    color: #7464C0;\r\n    :hover{\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .checkbox{\r\n    width: 24px;\r\n  }\r\n  .star{\r\n    width: 24px;\r\n  }\r\n  .delete{\r\n    width: 24px;\r\n    color: #34373d;\r\n  }\r\n  \r\n`\r\nexport const MyTodoContent = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  padding: 10px 0;  \r\n  margin: 0 14px;\r\n  font-size: 16px;\r\n  width: 95%;\r\n  color: ${(props: {completed: boolean}) => (props.completed ? '#c3c3c3' : '#34373d')};\r\n  text-decoration: ${(props: {completed: boolean}) => (props.completed ? 'line-through' : 'none')};\r\n`","import styled from 'styled-components'\r\n\r\nexport const MyTodoEmpty = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  h1{\r\n    display: flex;\r\n    justify-content: center;\r\n    color: #34373d;\r\n  }\r\n  img{\r\n    display: flex;\r\n    align-self: center;\r\n    width: 400px;\r\n    height: 300px;\r\n    @media screen and (max-width: 600px) {\r\n      width: 200px;\r\n      height: 150px;\r\n    }\r\n  }\r\n`","import React, { ReactElement } from 'react'\r\nimport {MyTodoEmpty} from './TodoEmpty.styled'\r\n\r\ninterface ITodoEmptyProps {\r\n  \r\n}\r\n\r\nconst TODO_PNG = `https://static.vecteezy.com/system/resources/previews/000/622/840/\r\nnon_2x/to-do-list-page-with-check-marks-and-pencil-concept-illustration-for-time-and-\r\nproject-management-vector-illustration-template-in-flat-style.jpg`\r\n\r\nexport const TodoEmpty = (): ReactElement => {\r\n  return (\r\n    <MyTodoEmpty>\r\n      <h1>To Do пустой</h1>\r\n      <img src={TODO_PNG} alt='img_todo'/>\r\n    </MyTodoEmpty>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ITodo } from '../../store/types'\r\nimport {\r\n  deleteTodo,\r\n  deleteFromImp,\r\n  toggleTodo,\r\n  toggleImpTodo,\r\n  addTodoImp\r\n} from '../../store/actions/todo'\r\nimport {\r\n  MyTodoList,\r\n  MyTodo,\r\n  MyTodoContent\r\n} from './TodoList.styled'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\nimport { TodoEmpty } from '../TodoEmpty/TodoEmpty'\r\n\r\ninterface ITodoListProps {\r\n  todos: ITodo[]\r\n  deleteTodo(id: string): ITodo[]\r\n  deleteFromImp(id: string): ITodo[]\r\n  toggleTodo(id: string): ITodo[]\r\n  toggleImpTodo(id: string): ITodo[]\r\n  addTodoImp(todos: ITodo): ITodo[]\r\n}\r\n\r\nconst TodoList = (props: ITodoListProps): ReactElement => {\r\n  const {todos, deleteTodo, deleteFromImp, toggleTodo, toggleImpTodo, addTodoImp} = props\r\n  \r\n  const addToImpHandler = (todo: any) => {\r\n    toggleImpTodo(todo.id)\r\n    addTodoImp(todo)\r\n  }\r\n  const delFromImpHandler = (todo: any) => {\r\n    deleteFromImp(todo.id)\r\n    toggleImpTodo(todo.id)\r\n  }\r\n  return (\r\n    <MyTodoList>\r\n      <TransitionGroup>\r\n        {todos.length &&\r\n          todos.map((todo: any) => (\r\n            <CSSTransition \r\n            key={todo.id}\r\n            timeout={500}\r\n            classNames='todo'\r\n            >\r\n              <MyTodo >\r\n                {todo.completed ? \r\n                  <span className=\"material-icons\" onClick={() => toggleTodo(todo.id)}>\r\n                    check_box\r\n                  </span>\r\n                  :\r\n                  <span className=\"material-icons checkbox\" onClick={() => toggleTodo(todo.id)}>\r\n                    check_box_outline_blank\r\n                  </span>\r\n                }\r\n                \r\n                <MyTodoContent completed={todo.completed}>\r\n                  {todo.title}\r\n                </MyTodoContent>\r\n                {todo.imp ?\r\n                  <span className=\"material-icons\" onClick={() => delFromImpHandler(todo)}>\r\n                    star\r\n                  </span>\r\n                  :\r\n                  <span className=\"material-icons star\" onClick={() => addToImpHandler(todo)}>\r\n                    star_border\r\n                  </span>\r\n                }\r\n                \r\n                <span className=\"material-icons delete\" onClick={() => deleteTodo(todo.id)}>\r\n                  delete\r\n                </span>\r\n              </MyTodo>\r\n            </CSSTransition>\r\n          ))\r\n        }\r\n      </TransitionGroup>\r\n\r\n      {!todos.length && <TodoEmpty/>}\r\n      \r\n    </MyTodoList>\r\n  )\r\n}\r\n\r\nconst mapStateToProps= (state: any) => ({\r\n  todos: state.todo.todos\r\n})\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  deleteTodo: (id: string) => dispatch(deleteTodo(id)),\r\n  deleteFromImp: (id: string) => dispatch(deleteFromImp(id)),\r\n  toggleTodo: (id: string) => dispatch(toggleTodo(id)),\r\n  toggleImpTodo: (id: string) => dispatch(toggleImpTodo(id)),\r\n  addTodoImp: (todos: ITodo) => dispatch(addTodoImp(todos))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const MyInput = styled.div`\r\n  margin: 0 20px;\r\n  \r\n  height: 50px;\r\n  border-bottom: 1px solid #D3D3D3;\r\n  display: flex;\r\n  span{\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 28px;\r\n    height: 100%;\r\n    color: #7464C0;\r\n    :hover{\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  input{\r\n    margin-left: 10px;\r\n    width: 100%;\r\n    border: transparent;\r\n    outline: none;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: #757575;\r\n    ::placeholder {\r\n      //color: #757575;\r\n      color: #7464C0;\r\n    }\r\n  }\r\n  \r\n`","import React, { ReactElement, useRef, useState } from 'react'\r\nimport {ITodo} from '../../store/types'\r\nimport { MyInput } from './TodoInput.styled'\r\n\r\ninterface ITodoInputProps {\r\n  addTodo(todo: ITodo): void,\r\n  todoItem(title: string): ITodo\r\n}\r\n\r\nconst TodoInput = (props: ITodoInputProps): ReactElement => {\r\n\r\n  const {addTodo, todoItem} = props\r\n  const [title, setTitle] = useState<string>('')\r\n  const refInput = useRef<HTMLInputElement>(null)\r\n\r\n  const focuseInputHandler = () => {\r\n    refInput.current!.focus()  \r\n  }\r\n  \r\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  const onKeyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' && title.trim().length){ \r\n      addTodo(todoItem(title))\r\n      setTitle('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MyInput>\r\n      <span className=\"material-icons\" onClick={() => focuseInputHandler()}>\r\n        add\r\n      </span>\r\n      \r\n      <input \r\n        placeholder='Добавить' \r\n        ref={refInput}\r\n        value={title}\r\n        onChange={onChangeHandler}\r\n        onKeyPress={onKeyPressHandler}\r\n        maxLength={255}\r\n      />\r\n    </MyInput>\r\n  )\r\n}\r\n\r\nexport default TodoInput","import styled from 'styled-components'\r\n\r\nexport const MyPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`","import styled from 'styled-components'\r\n\r\nexport const MyTodoSort = styled.div`\r\n  padding: 0 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  color: #34373d;\r\n\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n  span{\r\n    cursor: pointer;\r\n  }\r\n  .close{\r\n    font-size: 18px;\r\n  }\r\n`","import React, { ReactElement, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MyTodoSort } from './TodoSort.styled'\r\nimport { \r\n  sortByTitle,\r\n  sortByImp,\r\n  sortByDone,\r\n  sortByDate\r\n} from '../../store/actions/todo'\r\nimport {ITodo} from '../../store/types'\r\n\r\ninterface ITodoSortProps {\r\n  sortText: string\r\n  setSortBy(value: boolean): any\r\n  sortByTitle(value: string) : ITodo[]\r\n  sortByImp(value: string) : ITodo[]\r\n  sortByDone(value: string) : ITodo[]\r\n  sortByDate(value: string) : ITodo[]\r\n}\r\n\r\nconst TodoSort = (props: ITodoSortProps): ReactElement => {\r\n\r\n  const {setSortBy, sortText, sortByTitle, sortByImp, sortByDone, sortByDate} = props\r\n\r\n  const [sortIcon, setSortIcon] = useState<boolean>(false)\r\n  \r\n  const sortHandler = (orderBy: string) => {\r\n    if(sortText === 'по алфавиту'){\r\n      sortByTitle(orderBy) \r\n    }else if(sortText === 'по важности'){\r\n      sortByImp(orderBy)\r\n    }else if(sortText === 'по выполненому'){\r\n      sortByDone(orderBy)\r\n    }else{\r\n      sortByDate(orderBy)\r\n    }\r\n    setSortIcon(!sortIcon)\r\n  }\r\n\r\n  return (\r\n    <MyTodoSort>\r\n\r\n      {sortIcon ?\r\n        <span className=\"material-icons\" onClick={() => sortHandler('asc')}>\r\n          keyboard_arrow_down\r\n        </span>\r\n        :\r\n        <span className=\"material-icons\" onClick={() => sortHandler('desc')}>\r\n          keyboard_arrow_up\r\n        </span>\r\n      }\r\n      \r\n      <p>Сортировка {sortText}</p>\r\n\r\n      <span className=\"material-icons close\" onClick={() => setSortBy(false)}>\r\n        close\r\n      </span>\r\n\r\n    </MyTodoSort>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  sortByTitle: (orderBy: string) => dispatch(sortByTitle(orderBy)),\r\n  sortByImp: (orderBy: string) => dispatch(sortByImp(orderBy)),\r\n  sortByDone: (orderBy: string) => dispatch(sortByDone(orderBy)),\r\n  sortByDate: (orderBy: string) => dispatch(sortByDate(orderBy))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoSort)\r\n","import React, { ReactElement, useEffect, useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { connect } from 'react-redux'\r\nimport { ITodo } from '../store/types'\r\nimport { TodoToolbar } from '../components/TodoToolbar/TodoToolbar'\r\nimport { addTodo } from '../store/actions/todo'\r\nimport TodoList from '../components/TodoList/TodoList'\r\nimport TodoInput from '../components/TodoInput/TodoInput'\r\nimport { MyPage } from './page.styled'\r\nimport TodoSort from '../components/TodoSort/TodoSort'\r\n\r\ninterface IHomeProps {\r\n  addTodo(todo: ITodo): ITodo[]\r\n}\r\n\r\nconst Home = (props: IHomeProps): ReactElement => {\r\n  \r\n  const {addTodo} = props\r\n\r\n  const [title] = useState<string>('Задачи')\r\n  const [sortBy, setSortBy] = useState<boolean>(false)\r\n  \r\n  const [sortText, setSortText] = useState<string>('')\r\n\r\n  const todoItem = (title: string) => ({\r\n    id: uuid(),\r\n    title: title,\r\n    date: new Date(Date.now()),\r\n    completed: false,\r\n    imp: false\r\n  })\r\n\r\n  const addTodoHandler = (todo: ITodo) => addTodo(todo) \r\n  \r\n  useEffect(() => {\r\n    document.title = title\r\n  })\r\n\r\n  useEffect(() => {\r\n    const savedSort: boolean = JSON.parse(localStorage.getItem('savedSort') || 'false')  \r\n    setSortBy(savedSort)\r\n    const savedTextSort: string = JSON.parse(localStorage.getItem('savedTextSort') || '')  \r\n    setSortText(savedTextSort)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('savedSort', JSON.stringify(sortBy))\r\n    localStorage.setItem('savedTextSort', JSON.stringify(sortText))\r\n  }, [sortBy, sortText])\r\n\r\n  return (\r\n    <MyPage>\r\n      <TodoToolbar \r\n        title={title}\r\n        setSortBy={setSortBy}\r\n        setSortText={setSortText}\r\n      />\r\n\r\n      {sortBy ? <TodoSort setSortBy={setSortBy} sortText={sortText}/> : null}\r\n\r\n      <TodoInput \r\n        addTodo={addTodoHandler} \r\n        todoItem={todoItem}\r\n      />\r\n      \r\n      <TodoList/>\r\n    </MyPage>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  addTodo: (todos: ITodo) => dispatch(addTodo(todos)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Home)\r\n","import React, { ReactElement, useEffect } from 'react'\r\nimport { TodoToolbar } from '../components/TodoToolbar/TodoToolbar'\r\n\r\ninterface IMyDayProps {\r\n  \r\n}\r\n\r\nconst MyDay = (): ReactElement => {\r\n  \r\n  useEffect(() => {\r\n    document.title = `Сегодня`\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TodoToolbar title='Мой день'/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default MyDay\r\n","import React, { ReactElement } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ITodo } from '../../store/types'\r\nimport {\r\n  deleteTodo, \r\n  deleteFromImp,\r\n  toggleTodo,\r\n  toggleImpTodo\r\n} from '../../store/actions/todo'\r\nimport {\r\n  MyTodoList,\r\n  MyTodo,\r\n  MyTodoContent\r\n} from './TodoList.styled'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\ninterface ITodoListImpProps {\r\n  impTodos: ITodo[]\r\n  deleteTodo(id: string): ITodo[]\r\n  deleteFromImp(id: string): ITodo[]\r\n  toggleTodo(id: string): ITodo[]\r\n  toggleImpTodo(id: string): ITodo[]\r\n}\r\n\r\nconst TodoListImp = (props: ITodoListImpProps): ReactElement => {\r\n  const {impTodos, deleteTodo, deleteFromImp, toggleTodo, toggleImpTodo} = props\r\n\r\n  const deleteFromImpHandler = (id: string) => {\r\n    deleteFromImp(id)\r\n    toggleImpTodo(id)\r\n  }\r\n  return (\r\n    <MyTodoList>\r\n      <TransitionGroup>\r\n        {impTodos.map((todo: any) => (\r\n          <CSSTransition \r\n          key={todo.id}\r\n          timeout={500}\r\n          classNames='todo'\r\n          >\r\n            <MyTodo key={todo.id}>\r\n              {todo.completed ?\r\n                <span className=\"material-icons\" onClick={() => toggleTodo(todo.id)}>\r\n                  check_box\r\n                </span>\r\n                :\r\n                <span className=\"material-icons checkbox\" onClick={() => toggleTodo(todo.id)}>\r\n                  check_box_outline_blank\r\n                </span>\r\n              }\r\n              \r\n              <MyTodoContent completed={todo.completed}>\r\n                {todo.title}\r\n              </MyTodoContent>\r\n              {todo.imp ?\r\n                <span className=\"material-icons\" onClick={() => deleteFromImpHandler(todo.id)}>\r\n                  star\r\n                </span>\r\n                :\r\n                <span className=\"material-icons star\" onClick={() => deleteFromImpHandler(todo.id)}>\r\n                  star_border\r\n                </span>\r\n              }\r\n              \r\n              <span className=\"material-icons delete\" onClick={() => deleteTodo(todo.id)}>\r\n                delete\r\n              </span>\r\n            </MyTodo>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </MyTodoList>\r\n  )\r\n}\r\n\r\nconst mapStateToProps= (state: any) => ({\r\n  impTodos: state.todo.impTodos\r\n})\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  deleteTodo: (id: string) => dispatch(deleteTodo(id)),\r\n  deleteFromImp: (id: string) => dispatch(deleteFromImp(id)),\r\n  toggleTodo: (id: string) => dispatch(toggleTodo(id)),\r\n  toggleImpTodo: (id: string) => dispatch(toggleImpTodo(id)),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListImp)\r\n","import React, { ReactElement, useEffect, useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { connect } from 'react-redux'\r\nimport { ITodo } from '../store/types'\r\nimport { TodoToolbar } from '../components/TodoToolbar/TodoToolbar'\r\nimport TodoInput from '../components/TodoInput/TodoInput'\r\nimport TodoListImp from '../components/TodoList/TodoListImp'\r\nimport { \r\n  addTodo, \r\n  addTodoImp\r\n} from '../store/actions/todo'\r\nimport { MyPage } from './page.styled'\r\n\r\n\r\ninterface IImportantProps {\r\n  addTodo(todo: ITodo): ITodo[],\r\n  addTodoImp(todo: ITodo): ITodo[]\r\n}\r\n\r\nconst Important = (props: IImportantProps): ReactElement => {\r\n  \r\n  const {addTodo, addTodoImp} = props\r\n\r\n  const [title] = useState<string>('Важно')\r\n\r\n  const todoItem = (title: string) => ({\r\n    id: uuid(),\r\n    title: title,\r\n    date: new Date(Date.now()),\r\n    completed: false,\r\n    imp: true\r\n  })\r\n\r\n  const addTodoHandler = (todo: ITodo) => {\r\n    addTodo(todo)\r\n    addTodoImp(todo)\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = title\r\n  })\r\n\r\n  return (\r\n    <MyPage>\r\n      <TodoToolbar title={title}/>\r\n      <TodoInput addTodo={addTodoHandler} todoItem={todoItem}/>\r\n      <TodoListImp/>\r\n    </MyPage>\r\n  )\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  addTodo: (todos: ITodo) => dispatch(addTodo(todos)),\r\n  addTodoImp: (todos: ITodo) => dispatch(addTodoImp(todos))\r\n})\r\nexport default connect(null, mapDispatchToProps)(Important)\r\n","import styled from 'styled-components'\r\n\r\nexport const MyMain = styled.div`\r\n  display: flex;\r\n  height: 95vh;\r\n`","import React, { ReactElement, useState, useEffect } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {setTodo, setTodoImp} from '../../store/actions/todo'\r\nimport Menu from '../Menu/Menu'\r\nimport Home from '../../pages/Home'\r\nimport MyDay from '../../pages/MyDay'\r\nimport Important from '../../pages/Important'\r\nimport { ITodo } from '../../store/types'\r\nimport { MyMain } from './Main.styled'\r\n\r\ninterface IMainProps {\r\n  todos: ITodo[]\r\n  impTodos: ITodo[]\r\n  setTodo(todos: ITodo[]): any\r\n  setTodoImp(todos: ITodo[]): any\r\n}\r\n\r\nconst Main = (props: IMainProps): ReactElement => {\r\n  const {todos, impTodos, setTodo, setTodoImp} = props\r\n\r\n  const [openMenu, setOpenMenu] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    const savedMenu: boolean = JSON.parse(localStorage.getItem('openMenu') || 'false')\r\n    setOpenMenu(savedMenu)\r\n    const todos: ITodo[] = JSON.parse(localStorage.getItem('todos') || '[]')\r\n    setTodo(todos)\r\n    const todosImp: ITodo[] = JSON.parse(localStorage.getItem('todosImp') || '[]')\r\n    setTodoImp(todosImp)\r\n  }, [setTodo, setTodoImp])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('openMenu', JSON.stringify(openMenu))\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n    localStorage.setItem('todosImp', JSON.stringify(impTodos))\r\n  }, [openMenu, todos, impTodos])\r\n\r\n  return (\r\n    <MyMain>\r\n      <Menu\r\n        openMenu={openMenu} \r\n        setOpenMenu={setOpenMenu} \r\n        todos={todos} \r\n        impTodos={impTodos}\r\n      />\r\n      <Switch>\r\n        <Route path='/todo-ts' exact component={Home}/>\r\n        <Route path='/important' component={Important}/>\r\n        <Route path='/myday' component={MyDay}/>\r\n      </Switch>\r\n    </MyMain>\r\n  )\r\n}\r\n\r\nconst mapStateToProps= (state: any) => ({\r\n  todos: state.todo.todos,\r\n  impTodos: state.todo.impTodos\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  setTodo: (todos: ITodo[]) => dispatch(setTodo(todos)),\r\n  setTodoImp: (todos: ITodo[]) => dispatch(setTodoImp(todos))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)","import React, { ReactElement } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from '../../store/reducers/root'\nimport { GlobalStyle } from './App.styled'\nimport { Header } from '../Header/Header'\nimport Main from '../Main/Main'\n\nconst App = (): ReactElement => { \n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <GlobalStyle/>\n        <Header/>\n        <Main/>\n      </Provider> \n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}